# Usage
#   Start:          docker compose up
#   With helpers:   docker compose -f docker-compose.yml -f ./dev/docker-compose.dev.yml up
#   Stop:           docker compose down
#   Destroy:        docker compose -f docker-compose.yml -f ./dev/docker-compose.dev.yml down -v --remove-orphans

version: "3.9"

services:
  db:
    container_name: pim-db
    image: postgres:16.2-bookworm
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d pim'" ]
      interval: 10s
      timeout: 5s
      retries: 10
    # depends_on:
    #   vector:
    #     condition: service_healthy
    command:
      - postgres
      - -c
      - config_file=/var/lib/postgresql/data/postgresql.conf
      - -c
      - log_min_messages=fatal
    restart: unless-stopped
    ports:
      - 127.0.0.1:${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_HOST: /var/run/postgresql
      PGPORT: ${POSTGRES_PORT}
      POSTGRES_PORT: ${POSTGRES_PORT}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATABASE: ${POSTGRES_DB}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      # Must be superuser to alter reserved role
      - ./volumes/db/roles.sql:/docker-entrypoint-initdb.d/90-roles.sql:Z
      # PGDATA directory is persisted between restarts
      - ./volumes/db/data:/var/lib/postgresql/data:Z
      - ./volumes/db/pim.sql:/docker-entrypoint-initdb.d/91-pim.sql:Z
      - ./volumes/db/sites.sql:/docker-entrypoint-initdb.d/92-sites.sql:Z
      - ./volumes/db/posts.sql:/docker-entrypoint-initdb.d/93-posts.sql:Z
      - ./volumes/db/customers.sql:/docker-entrypoint-initdb.d/94-customers.sql:Z
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
    networks:
      - intranet

networks:
  intranet:
    name: intranet
